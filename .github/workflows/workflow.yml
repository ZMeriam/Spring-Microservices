# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:


env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: cluster1
  GKE_ZONE: us-central1-c

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3 #an action that allows you to check out a repository to allow your workflow to access it.
    - name: Set up JDK 17
      uses: actions/setup-java@v3 #Downloading and setting up a requested version of Java
      with:
        java-version: 17
        distribution: 'adopt'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD



    - name: Building and pushing user-service

      run: docker login -u zmeriam -p Meriam1995
           mvn package dockerfile:push --file user-service/pom.xml
      env:
           MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
           MAVEN_PASSWORD: ${{secrets.DOCKER.PASSWORD}}


    - name: Building and pushing  department-service
      run: mvn package dockerfile:push --file user-department/pom.xml
      env:
           MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
           MAVEN_PASSWORD: ${{secrets.DOCKER.PASSWORD}}


    - name: Building and pushing config-server
      run: mvn package dockerfile:push --file config-server/pom.xml
      env:
           MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
           MAVEN_PASSWORD: ${{secrets.DOCKER.PASSWORD}}


    - name: Building and pushing cloud-gateway
      run: mvn package dockerfile:push --file cloud-gateway/pom.xml
      env:
           MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
           MAVEN_PASSWORD: ${{secrets.DOCKER.PASSWORD}}


    - name: Building and pushing service-registry
      run: mvn package dockerfile:push --file service-registry/pom.xml
      env:
           MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
           MAVEN_PASSWORD: ${{secrets.DOCKER.PASSWORD}}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{env.PROJECT_ID}}
        APPLICATION_CREDENTIALS: ${{secrets.APPLICATION_CREDENTIALS}} #Google console key, the key for the project: IAM&Admin >service accounts > keys > convert your key to bazse 64
        CLUSTER_NAME: ${{env.GKE_CLUSTER}}
        ZONE_NAME: ${{env.GKE_ZONE}}

      with:
        args: apply -f K8S/

    
